spring.task.scheduling.pool.size=5
server.port=8081
spring.application.name=kafka-handler
service1.api.base.url=http://localhost:8082
service1.api.uri=/api/user

spring.kafka.bootstrap-servers==localhost:9092
spring.kafka.consumer.enable-auto-commit=false
spring.kafka.consumer.group-id=mq_kafka_consumer

spring.kafka.consumer.key-deserializer= org.apache.kafka.common.serialization.StringDeserializer
spring.kafka.consumer.value-deserializer=org.apache.kafka.common.serialization.StringDeserializer

spring.kafka.producer.key-serializer=org.apache.kafka.common.serialization.StringSerializer
spring.kafka.producer.value-serializer=org.apache.kafka.common.serialization.StringSerializer

#spring.cloud.stream.kafka.streams.binder.deserializationExceptionHandler=logAndContinue


spring.kafka.listener.concurrency=5
spring.kafka.listener.ack-mode=MANUAL_IMMEDIATE
spring.kafka.consumer.auto-offset-reset=earliest

kafka.topic=test-topic
#logging.level.reactor.netty.http.client.HttpClient=DEBUG
#logging.level.reactor.netty.http.client=DEBUG

#spring.datasource.url=jdbc:postgresql://localhost:5432/shopme
#spring.datasource.username=postgres
#spring.datasource.password=admin123

#spring.jpa.hibernate.ddl-auto=update
#spring.jpa.show-sql=true
#spring.jpa.properties.hibernate.format_sql=true
#spring.jpa.properties.hibernate.dialect=org.hibernate.dialect.PostgreSQL81Dialect










